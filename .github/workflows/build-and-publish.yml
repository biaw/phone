name: Build and publish

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch:
  repository_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

    - name: Set up node
      uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
      with:
        node-version: "16.x"

    - name: Restore cached modules
      uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12 # v3
      id: cache-packages
      with:
        path: node_modules
        key: ${{ hashFiles('**/package-lock.json') }}

    - name: Fallback if module cache fails
      run: npm ci
      if: steps.cache-packages.outputs.cache-hit != 'true'

    - name: Restore cached build
      uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12 # v3
      id: cache-build
      with:
        path: build
        key: ${{ github.sha }}

    - name: Fallback if build cache fails
      run: npm run build
      if: steps.cache-build.outputs.cache-hit != 'true'

  publish:
    name: Publish
    runs-on: ubuntu-latest

    if: ${{ github.event_name != 'pull_request' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3

    - name: Set up node
      uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3
      with:
        node-version: "16.x"

    - name: Restore cached modules
      uses: actions/cache@58c146cc91c5b9e778e71775dfe9bf1442ad9a12 # v3
      id: cache-packages
      with:
        path: node_modules
        key: ${{ hashFiles('package-lock.json') }}

    - name: Fallback if module cache fails
      run: npm ci
      if: steps.cache-packages.outputs.cache-hit != 'true'

    - name: Build and Publish to Worker
      uses: cloudflare/wrangler-action@4c10c1822abba527d820b29e6333e7f5dac2cabd # tag=2.0.0
      with:
        apiToken: ${{ secrets.CF_API_TOKEN }}
        accountId: ${{ secrets.CF_ACCOUNT_ID }}
